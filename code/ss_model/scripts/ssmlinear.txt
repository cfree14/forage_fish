
  #Declare variables (population matrix, adult mortality, leslie matrix, Dhats, Qs, etc.)
    var N[A,Y],m_ad[Y],M[A,Y],BHpt[Y],BHp[Y],BHct[Y],BHc[Y],Rt[Y],R[Y],St[Y],S[Y],SKt[Y],SK[Y],CC[Y],x[Y],y[Y],Nm[Y],obs_dev[Y],pro_dev[Y];

    model {

    # Prior for initial population size (log scale)
    #NOTE: Artificial loop, for cutting out these lines when calculating priors only
    for(i in 1:min(nyears,1)){
      x[1] <- n0_log #mrun skip
      y[1] ~ dnorm(log(CC[1]),tauobs)
      obs_dev[1] <- y[1] - log(CC[1]);
      pro_dev[1] <- x[1] - log(initial_population_size) #this is a fudge; the first process error is really zero, but is not used
    }    

    #Pre-calculate number of recruits, survival rate, and skipping rate for all years. 
    #This uses a linear model: R = BHp_avg_log + alpha1 * cov1 + alpha2 * cov2 + alpha3 * cov3, etc.
    #Variables that are being searched for in log- and arctan-space end in '_log' and '_at', respectively.
    #Recruitment is based on conditions in year (i-1)..except for year 1, where we lack data
    for(i in 1:nyears){
      #recruitment productivity
      BHpt[i]<- BHp_avg_log +  inprod(covariates_worst[max(i-1,1),],alpha) #log scale
      BHp[i]<-min(exp(BHpt[i]),Mo/2) #Note: we're setting an upper bound on the productivity of Mo/2

      #Recruitment carrying capacity. NOTE: carrying capacity is only influenced by covariate 2, i.e., anchoveta
      #Single-capacity version
      BHct[i]<- BHc_avg_log +  covariates_worst[max(i-1,1),2] * eta #log scale
      BHc[i]<-exp(BHct[i])

      #adult survival
      St[i]<- S_avg_at + inprod(covariates[i,],beta)
      S[i]<-(arctan(St[i]) + pi/2)/pi
      
      #skipping (may use a modified EN index; hence the different covariate set)
      SKt[i]<- SK_avg_at + inprod(skipping_covariates[i,],delta)
      SK[i]<-(arctan(SKt[i]) + pi/2)/pi
    }
    
    #This is an artificial loop: we want to do it one time only, or not at all
    for(i in 1:min(nyears,1)){
      #Create a vector of mortality by age, M.
      m_ad[1]<- -log(S[1]) #Calculate adult mortality rate for year 1
      M[1:am,1]<-rep(0,am)
      M[(am + 1),1]<- m_ad[1] #Set adult mortality (note: index am+1 = age am)
      
      #Set the colony count at n0_log (a random draw based on the observed initial pop 
      #size.  Remember: Nm is not observed)
      CC[1]<-exp(x[1]) 

      #log likelihood only used for model comparison, otherwise ignored
      loglik[1]<-logdensity.norm(y[1], log(CC[1]), tauobs)
      
      #initial true adult population (use SK[1] because no data for year SK[0])
      #if the skipping rate is very high, Nm will be huge.
      Nm[1]<-CC[1]/(1 - SK[1])
  
      #Calculate year 1 recruits
      R[1]=CC[1]/(1/BHp[1] + CC[1]/BHc[1]) #with BHc as vector
  
      #Set the numbers in the N matrix.  This is approximate, since the juvenile
      #age classes should really depend on earlier years
      N[1:am,1]<-rep(R[1],am) #recruits and juveniles
      N[A,1]<-Nm[1] #The number mature (Nm), including error
    }

    for (i in 2:nyears) {
    # State equation
    
    #Create a vector, M, of mortality-by-age for the current year (won't be used til next year)
    m_ad[i]<- -log(S[i]) #get adult mortality from survival adjusted for conditions

    #Set juvenile mortality to zero (subsumed in the BevHolt relation)
    M[1:am,i]<-rep(0,am)
    M[(am + 1),i]<-m_ad[i] #Set adult mortality (note: index am+1 = age am)
    
    #Calculate numbers at age for the current year
    for (j in 2:(A-1)) {
      N[j,i]<-N[j-1,i-1] * exp(-M[j-1,i-1]) #juveniles
    }
    #Keep adults separate (in Nm) for now.
    Nm[i]<-(N[A-1,i-1] * exp(-M[A-1,i-1]) + N[A,i-1] * exp(-M[A,i-1]))

    #Calculate x[i], number mature with lognormal error
    x[i] ~ dnorm(log(Nm[i]),tausta)
    
    #Calculate colony count (mature birds that don't skip breeding)
    CC[i]<-(exp(x[i]) * (1 - SK[i-1]))  

    #Put the number mature (Nm) with error into N.
    N[A,i]<-exp(x[i]) 
    
    #Calculate year i recruits and add them to the population matrix
    R[i]=CC[i]/(1/BHp[i] + CC[i]/BHc[i]) #with BHc as vector

    N[1,i]<-R[i] 
    
    #process error
    pro_dev[i] <- x[i] - log(Nm[i]) 
    
    #likelihood 
    y[i] ~ dnorm(log(CC[i]),tauobs) 
    loglik[i] <- logdensity.norm(y[i], CC[i], tauobs)

    # Observation error
    obs_dev[i] <- y[i] - log(CC[i]) 
    } #for i in 2:Y
    
    # Priors for covariate coefficients.  Reminder: these are dnorm(mean,tau), not dnorm(mean, sd)
    for(i in 1:n_cov) {
      alpha[i] ~ dnorm(0, .05) #
      beta[i] ~ dnorm(0, .5)
      delta[i] ~ dnorm(0, .5)
    }
    eta ~ dnorm(0,.5) #carrying capacity depends only on anchoveta SSB

    #Priors for average reproduction and carrying capacity
    BHp_avg_log ~ dnorm(BHp_avg_log_priormean,1) #Beverton-Holt productivity (log scale). 
    BHc_avg_log ~ dnorm(BHc_avg_log_priormean,3) #Beverton-Holt capacity (log scale)

    #Priors for average survival 
    S_avg_at ~ dnorm(S_avg_priormean,1) 
    
    #Priors for skipping rate
    SK_avg_at ~ dnorm(SK_avg_priormean,1)

    #standard deviation terms
    tausta ~ dgamma(0.01,0.001) #Eric Ward set these up; they seem to work OK
    sdsta <- 1/sqrt(tausta);
    tauobs ~ dgamma(0.001,0.001);
    sdobs <- 1/sqrt(tauobs);
    
    #Initial population size (x and n0_log are on log scale; initial_population_size is not)
    n0_log ~ dnorm(log(initial_population_size),3)
  }
  